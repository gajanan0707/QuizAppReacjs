{"version":3,"sources":["helpers/Contexts.js","components/Menu.js","helpers/Questions.js","components/Quiz.js","components/EndScreen.js","App.js","reportWebVitals.js","index.js"],"names":["GameStateContext","createContext","Menu","useContext","setGameState","gameState","setUserName","userName","className","type","placeholder","onChange","event","target","value","onClick","Questions","prompt","optionA","optionB","optionC","optionD","asnwer","Quiz","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","score","setScore","chooseOption","option","length","id","EndScreen","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00e027e6.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const GameStateContext = createContext(\"\");\n","import \"../App.css\";\nimport { useContext } from \"react\";\nimport { GameStateContext } from \"../helpers/Contexts\";\n\nfunction Menu() {\n  const { gameState, setGameState, userName, setUserName } = useContext(\n    GameStateContext\n  );\n  return (\n    <div className=\"Menu\">\n      <label>Enter Your Name:</label>\n      <input\n        type=\"text\"\n        placeholder=\"Ex. Iron Man\"\n        onChange={(event) => {\n          setUserName(event.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          setGameState(\"playing\");\n        }}\n      >\n        Start Quiz\n      </button>\n    </div>\n  );\n}\n\nexport default Menu;\n","export const Questions = [\n  {\n    prompt: \"What is my name?\",\n    optionA: \"Robert\",\n    optionB: \"Captain\",\n    optionC: \"Thor\",\n    optionD: \"miss Marvel\",\n    asnwer: \"optionA\",\n  },\n  {\n    prompt: \"Which of this is not a programming language?\",\n    optionA: \"Python\",\n    optionB: \"JavaScript\",\n    optionC: \"MC-03\",\n    optionD: \"Java\",\n    asnwer: \"optionC\",\n  },\n  {\n    prompt: \"Which of this is not a javascript framework?\",\n    optionA: \"React\",\n    optionB: \"Angular\",\n    optionC: \"Vue\",\n    optionD: \"Java\",\n    asnwer: \"optionD\",\n  },\n];\n","import \"../App.css\";\nimport { Questions } from \"../helpers/Questions\";\nimport { useState } from \"react\";\n\nimport { useContext } from \"react\";\nimport { GameStateContext } from \"../helpers/Contexts\";\n\nfunction Quiz() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n\n  const { score, setScore, gameState, setGameState } = useContext(\n    GameStateContext\n  );\n\n  const chooseOption = (option) => {\n    setOptionChosen(option);\n  };\n\n  const nextQuestion = () => {\n    if (Questions[currentQuestion].asnwer == optionChosen) {\n      setScore(score + 1);\n    }\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const finishQuiz = () => {\n    if (Questions[currentQuestion].asnwer == optionChosen) {\n      setScore(score + 1);\n    }\n    setGameState(\"finished\");\n  };\n\n  return (\n    <div className=\"Quiz\">\n      <h1>{Questions[currentQuestion].prompt}</h1>\n      <div className=\"questions\">\n        <button\n          onClick={() => {\n            chooseOption(\"optionA\");\n          }}\n        >\n          {Questions[currentQuestion].optionA}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionB\");\n          }}\n        >\n          {Questions[currentQuestion].optionB}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionC\");\n          }}\n        >\n          {Questions[currentQuestion].optionC}\n        </button>\n        <button\n          onClick={() => {\n            chooseOption(\"optionD\");\n          }}\n        >\n          {Questions[currentQuestion].optionD}\n        </button>\n      </div>\n\n      {currentQuestion == Questions.length - 1 ? (\n        <button onClick={finishQuiz} id=\"nextQuestion\">\n          Finish Quiz\n        </button>\n      ) : (\n        <button onClick={nextQuestion} id=\"nextQuestion\">\n          Next Question\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport \"../App.css\";\nimport { useContext } from \"react\";\nimport { GameStateContext } from \"../helpers/Contexts\";\nimport { Questions } from \"../helpers/Questions\";\n\nconst EndScreen = () => {\n  const { score, setScore, setGameState, userName } = useContext(\n    GameStateContext\n  );\n\n  const restartQuiz = () => {\n    setScore(0);\n    setGameState(\"menu\");\n  };\n  return (\n    <div className=\"EndScreen\">\n      <h1>Quiz Finished</h1>\n      <h3>{userName}</h3>\n      <h1>\n        {score} / {Questions.length}\n      </h1>\n      <button onClick={restartQuiz}>Restart Quiz</button>\n    </div>\n  );\n};\n\nexport default EndScreen;\n","import \"./App.css\";\nimport Menu from \"./components/Menu\";\nimport Quiz from \"./components/Quiz\";\nimport EndScreen from \"./components/EndScreen\";\nimport { useState } from \"react\";\nimport { GameStateContext } from \"./helpers/Contexts\";\n// ['menu', 'playing', 'finished']\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [userName, setUserName] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      <GameStateContext.Provider\n        value={{\n          gameState,\n          setGameState,\n          userName,\n          setUserName,\n          score,\n          setScore,\n        }}\n      >\n        {gameState === \"menu\" && <Menu />}\n        {gameState === \"playing\" && <Quiz />}\n        {gameState === \"finished\" && <EndScreen />}\n      </GameStateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}